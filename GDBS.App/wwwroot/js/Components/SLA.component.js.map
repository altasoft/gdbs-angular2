{"version":3,"sources":["Components/SLA.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAgBA;gBAAkC,gCAAe;gBAI7C,sBACI,OAAmB,EACnB,QAAkB,EACV,WAAuB;oBAC/B,kBAAM,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;oBADzB,gBAAW,GAAX,WAAW,CAAY;gBAEnC,CAAC;gBAED,+BAAQ,GAAR;oBAAA,iBAOC;oBANG,gBAAK,CAAC,QAAQ,WAAE,CAAC;oBAEjB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAA,GAAG;wBAC/B,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;wBACrB,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAA;oBAC1B,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,wCAAiB,GAAjB,UAAkB,KAAK;oBAAvB,iBAKC;oBAJG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,UAAA,GAAG;wBACxF,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;wBACrB,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAA;oBAC1B,CAAC,CAAC,CAAC;gBACP,CAAC;gBAhCL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,MAAM;wBAChB,WAAW,EAAE,qCAAqC;wBAClD,SAAS,EAAE,CAAC,wBAAU,CAAC;wBACvB,UAAU,EAAE,CAAC,0BAAiB,EAAE,iCAAU,CAAC;qBAC9C,CAAC;;gCAAA;gBA4BF,mBAAC;YAAD,CA1BA,AA0BC,CA1BiC,kCAAe,GA0BhD;YA1BD,uCA0BC,CAAA","file":"Components/SLA.component.js","sourcesContent":["import {Component, OnInit, ElementRef} from 'angular2/core';\r\nimport {ROUTER_DIRECTIVES, Router, Location} from 'angular2/router';\r\nimport {Pagination} from './pagination.component'\r\n\r\nimport {ColumnComponent} from './Column.component'\r\n\r\nimport {SLA} from '../Models/SLA';\r\nimport {SLAService} from '../Services/SLA.service';\r\n\r\n@Component({\r\n    selector: 'list',\r\n    templateUrl: '/html/Components/SLA.component.html',\r\n    providers: [SLAService],\r\n    directives: [ROUTER_DIRECTIVES, Pagination]\r\n})\r\n\r\nexport class SLAComponent extends ColumnComponent implements OnInit {\r\n    SLAs: SLA[];\r\n    total: number;\r\n\r\n    constructor(\r\n        element: ElementRef,\r\n        location: Location,\r\n        private _SLAService: SLAService) {\r\n        super(element, location, 'SLAs');\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n\r\n        this._SLAService.getSLAs().then(res => {\r\n            this.SLAs = res.SLAs;\r\n            this.total = res.total\r\n        });\r\n    }\r\n\r\n    currentPageChange(event) {\r\n        this._SLAService.getSLAs((event.page - 1) * event.itemsPerPage, event.itemsPerPage).then(res => {\r\n            this.SLAs = res.SLAs;\r\n            this.total = res.total\r\n        });\r\n    }\r\n}"],"sourceRoot":"/Source"}