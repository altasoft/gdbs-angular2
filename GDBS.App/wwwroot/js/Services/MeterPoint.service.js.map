{"version":3,"sources":["Services/MeterPoint.service.ts"],"names":[],"mappings":"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","file":"Services/MeterPoint.service.js","sourcesContent":["import {Injectable} from 'angular2/core';\n\nimport {SLA} from '../Models/SLA';\n\nvar SLAs: SLA[] = [\n    { \"id\": 1, \"adminNumber\": \"01020304050\", \"type\": 0, \"totalBalance\": 13.13, \"currency\": \"GEL\", \"state\": 0 },\n    { \"id\": 2, \"adminNumber\": \"05040302010\", \"type\": 1, \"totalBalance\": 13.13, \"currency\": \"GEL\", \"state\": 2 },\n    { \"id\": 3, \"adminNumber\": \"01020304050\", \"type\": 0, \"totalBalance\": 13.13, \"currency\": \"GEL\", \"state\": 0 },\n    { \"id\": 4, \"adminNumber\": \"05040302010\", \"type\": 1, \"totalBalance\": 13.13, \"currency\": \"GEL\", \"state\": 2 },\n    { \"id\": 5, \"adminNumber\": \"01020304050\", \"type\": 0, \"totalBalance\": 13.13, \"currency\": \"GEL\", \"state\": 0 },\n    { \"id\": 6, \"adminNumber\": \"05040302010\", \"type\": 1, \"totalBalance\": 13.13, \"currency\": \"GEL\", \"state\": 2 },\n    { \"id\": 7, \"adminNumber\": \"01020304050\", \"type\": 0, \"totalBalance\": 13.13, \"currency\": \"GEL\", \"state\": 0 },\n    { \"id\": 8, \"adminNumber\": \"05040302010\", \"type\": 1, \"totalBalance\": 13.13, \"currency\": \"GEL\", \"state\": 2 },\n    { \"id\": 9, \"adminNumber\": \"01020304050\", \"type\": 0, \"totalBalance\": 13.13, \"currency\": \"GEL\", \"state\": 0 },\n    { \"id\": 10, \"adminNumber\": \"05040302010\", \"type\": 1, \"totalBalance\": 13.13, \"currency\": \"GEL\", \"state\": 2 },\n    { \"id\": 11, \"adminNumber\": \"01020304050\", \"type\": 0, \"totalBalance\": 13.13, \"currency\": \"GEL\", \"state\": 0 },\n    { \"id\": 12, \"adminNumber\": \"05040302010\", \"type\": 1, \"totalBalance\": 13.13, \"currency\": \"GEL\", \"state\": 2 },\n];\nvar total = SLAs.length;\n\n@Injectable()\nexport class MeterPointService {\n    getSLAs(skip: number = 0, take: any = 10) {\n        return Promise.resolve({\n            SLAs: SLAs.slice(skip, skip + parseInt(take)),\n            total: total\n        });\n    }\n\n    getSLA(id: number) {\n        return Promise.resolve(SLAs).then(\n            SLAs => SLAs.filter(SLA => SLA.id === id)[0]\n        );\n    }\n}"],"sourceRoot":"/Source"}